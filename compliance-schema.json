{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "$id": "https://github.com/flemzord/github-compliance/compliance-schema.json",
  "title": "GitHub Compliance Configuration",
  "description": "Configuration schema for GitHub repository compliance enforcement",
  "type": "object",
  "required": ["version", "defaults"],
  "properties": {
    "version": {
      "type": "integer",
      "const": 1,
      "description": "Schema version (must be 1)"
    },
    "organization": {
      "type": "string",
      "description": "GitHub organization name to apply compliance rules to",
      "pattern": "^[a-zA-Z0-9][a-zA-Z0-9-]*[a-zA-Z0-9]$"
    },
    "defaults": {
      "type": "object",
      "description": "Default compliance settings applied to all repositories",
      "properties": {
        "merge_methods": {
          "$ref": "#/definitions/merge_methods"
        },
        "branch_protection": {
          "$ref": "#/definitions/branch_protection"
        },
        "security": {
          "$ref": "#/definitions/security"
        },
        "permissions": {
          "$ref": "#/definitions/permissions"
        },
        "archived_repos": {
          "$ref": "#/definitions/archived_repos"
        }
      },
      "additionalProperties": false
    },
    "rules": {
      "type": "array",
      "description": "Repository-specific overrides based on patterns or criteria",
      "items": {
        "type": "object",
        "required": ["match", "apply"],
        "properties": {
          "match": {
            "type": "object",
            "description": "Criteria to match repositories",
            "properties": {
              "repositories": {
                "type": "array",
                "description": "List of repository name patterns (supports wildcards)",
                "items": {
                  "type": "string"
                }
              },
              "only_private": {
                "type": "boolean",
                "description": "Apply only to private repositories"
              }
            },
            "additionalProperties": false
          },
          "apply": {
            "type": "object",
            "description": "Settings to apply to matched repositories",
            "properties": {
              "merge_methods": {
                "$ref": "#/definitions/merge_methods_partial"
              },
              "branch_protection": {
                "$ref": "#/definitions/branch_protection_partial"
              },
              "security": {
                "$ref": "#/definitions/security_partial"
              },
              "permissions": {
                "$ref": "#/definitions/permissions_partial"
              },
              "archived_repos": {
                "$ref": "#/definitions/archived_repos_partial"
              }
            },
            "additionalProperties": false
          }
        },
        "additionalProperties": false
      }
    }
  },
  "additionalProperties": false,
  "definitions": {
    "merge_methods": {
      "type": "object",
      "description": "Controls which merge strategies are allowed for pull requests",
      "required": ["allow_merge_commit", "allow_squash_merge", "allow_rebase_merge"],
      "properties": {
        "allow_merge_commit": {
          "type": "boolean",
          "description": "Allow merge commits"
        },
        "allow_squash_merge": {
          "type": "boolean",
          "description": "Allow squash merging"
        },
        "allow_rebase_merge": {
          "type": "boolean",
          "description": "Allow rebase merging"
        }
      },
      "additionalProperties": false
    },
    "merge_methods_partial": {
      "type": "object",
      "description": "Partial merge methods configuration for overrides",
      "properties": {
        "allow_merge_commit": {
          "type": "boolean"
        },
        "allow_squash_merge": {
          "type": "boolean"
        },
        "allow_rebase_merge": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "branch_protection": {
      "type": "object",
      "description": "Configures branch protection rules for repositories",
      "required": [
        "patterns",
        "enforce_admins",
        "required_reviews",
        "required_status_checks",
        "restrictions",
        "allow_force_pushes",
        "allow_deletions",
        "required_conversation_resolution",
        "lock_branch",
        "allow_fork_syncing"
      ],
      "properties": {
        "patterns": {
          "type": "array",
          "description": "Branch name patterns to protect (e.g., 'main', 'release/*')",
          "items": {
            "type": "string"
          },
          "examples": [["main", "release/*", "develop"]]
        },
        "enforce_admins": {
          "type": "boolean",
          "description": "Enforce all configured restrictions for administrators"
        },
        "required_reviews": {
          "$ref": "#/definitions/required_reviews"
        },
        "required_status_checks": {
          "$ref": "#/definitions/required_status_checks"
        },
        "restrictions": {
          "$ref": "#/definitions/restrictions"
        },
        "allow_force_pushes": {
          "type": "boolean",
          "description": "Permit force pushes for all users with push access"
        },
        "allow_deletions": {
          "type": "boolean",
          "description": "Allow users with push access to delete protected branches"
        },
        "required_conversation_resolution": {
          "type": "boolean",
          "description": "Require all conversations to be resolved before merging"
        },
        "lock_branch": {
          "type": "boolean",
          "description": "Lock the branch (read-only)"
        },
        "allow_fork_syncing": {
          "type": "boolean",
          "description": "Allow fork syncing"
        }
      },
      "additionalProperties": false
    },
    "branch_protection_partial": {
      "type": "object",
      "description": "Partial branch protection configuration for overrides",
      "properties": {
        "patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "enforce_admins": {
          "type": "boolean"
        },
        "required_reviews": {
          "$ref": "#/definitions/required_reviews_partial"
        },
        "required_status_checks": {
          "$ref": "#/definitions/required_status_checks_partial"
        },
        "restrictions": {
          "$ref": "#/definitions/restrictions_partial"
        },
        "allow_force_pushes": {
          "type": "boolean"
        },
        "allow_deletions": {
          "type": "boolean"
        },
        "required_conversation_resolution": {
          "type": "boolean"
        },
        "lock_branch": {
          "type": "boolean"
        },
        "allow_fork_syncing": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "required_reviews": {
      "type": "object",
      "required": [
        "dismiss_stale_reviews",
        "require_code_owner_reviews",
        "required_approving_review_count",
        "require_last_push_approval"
      ],
      "properties": {
        "dismiss_stale_reviews": {
          "type": "boolean",
          "description": "Dismiss approved reviews when new commits are pushed"
        },
        "require_code_owner_reviews": {
          "type": "boolean",
          "description": "Require review from code owners"
        },
        "required_approving_review_count": {
          "type": "integer",
          "minimum": 0,
          "description": "Number of required approving reviews"
        },
        "require_last_push_approval": {
          "type": "boolean",
          "description": "Require approval from someone other than the last pusher"
        }
      },
      "additionalProperties": false
    },
    "required_reviews_partial": {
      "type": "object",
      "properties": {
        "dismiss_stale_reviews": {
          "type": "boolean"
        },
        "require_code_owner_reviews": {
          "type": "boolean"
        },
        "required_approving_review_count": {
          "type": "integer",
          "minimum": 0
        },
        "require_last_push_approval": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "required_status_checks": {
      "type": "object",
      "required": ["strict", "contexts", "auto_discover"],
      "properties": {
        "strict": {
          "type": "boolean",
          "description": "Require branches to be up to date before merging"
        },
        "contexts": {
          "type": "array",
          "description": "List of status checks that must pass",
          "items": {
            "type": "string"
          },
          "examples": [["continuous-integration/travis-ci", "ci/circleci"]]
        },
        "auto_discover": {
          "type": "boolean",
          "description": "Automatically discover status checks from the repository"
        }
      },
      "additionalProperties": false
    },
    "required_status_checks_partial": {
      "type": "object",
      "properties": {
        "strict": {
          "type": "boolean"
        },
        "contexts": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "auto_discover": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "restrictions": {
      "type": "object",
      "description": "Restrict who can push to protected branches",
      "required": ["users", "teams"],
      "properties": {
        "users": {
          "type": "array",
          "description": "GitHub usernames allowed to push",
          "items": {
            "type": "string"
          }
        },
        "teams": {
          "type": "array",
          "description": "GitHub team slugs allowed to push",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false,
      "examples": [
        {
          "users": [],
          "teams": ["admin-team", "release-team"]
        },
        {
          "users": [],
          "teams": []
        }
      ]
    },
    "restrictions_partial": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "teams": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "security": {
      "type": "object",
      "description": "Manages security features like secret scanning and vulnerability alerts",
      "required": [
        "secret_scanning",
        "secret_scanning_push_protection",
        "dependabot_alerts",
        "dependabot_updates",
        "code_scanning_recommended"
      ],
      "properties": {
        "secret_scanning": {
          "type": "string",
          "enum": ["enabled", "disabled"],
          "description": "GitHub secret scanning in code"
        },
        "secret_scanning_push_protection": {
          "type": "string",
          "enum": ["enabled", "disabled", "auto"],
          "description": "Block pushes containing secrets"
        },
        "dependabot_alerts": {
          "type": "boolean",
          "description": "Enable vulnerability alerts"
        },
        "dependabot_updates": {
          "type": "boolean",
          "description": "Enable automatic dependency updates"
        },
        "code_scanning_recommended": {
          "type": "boolean",
          "description": "Recommend code scanning (requires GitHub Advanced Security for private repos)"
        }
      },
      "additionalProperties": false
    },
    "security_partial": {
      "type": "object",
      "properties": {
        "secret_scanning": {
          "type": "string",
          "enum": ["enabled", "disabled"]
        },
        "secret_scanning_push_protection": {
          "type": "string",
          "enum": ["enabled", "disabled", "auto"]
        },
        "dependabot_alerts": {
          "type": "boolean"
        },
        "dependabot_updates": {
          "type": "boolean"
        },
        "code_scanning_recommended": {
          "type": "boolean"
        }
      },
      "additionalProperties": false
    },
    "permissions": {
      "type": "object",
      "description": "Defines team access levels and collaborator management",
      "required": ["remove_individual_collaborators", "teams"],
      "properties": {
        "remove_individual_collaborators": {
          "type": "boolean",
          "description": "Remove individual collaborators (keep only team access)"
        },
        "teams": {
          "type": "array",
          "description": "Team permission configurations",
          "items": {
            "$ref": "#/definitions/team_permission"
          }
        }
      },
      "additionalProperties": false
    },
    "permissions_partial": {
      "type": "object",
      "properties": {
        "remove_individual_collaborators": {
          "type": "boolean"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/team_permission"
          }
        }
      },
      "additionalProperties": false
    },
    "team_permission": {
      "type": "object",
      "required": ["team", "permission"],
      "properties": {
        "team": {
          "type": "string",
          "description": "GitHub team slug"
        },
        "permission": {
          "type": "string",
          "enum": ["read", "triage", "write", "maintain", "admin", "push"],
          "description": "Permission level: read < triage < write/push < maintain < admin"
        }
      },
      "additionalProperties": false
    },
    "archived_repos": {
      "type": "object",
      "description": "Controls access and management of archived repositories",
      "required": ["admin_team_only"],
      "properties": {
        "admin_team_only": {
          "type": "boolean",
          "description": "Restrict archived repos to admin team access only"
        },
        "archive_inactive": {
          "type": "boolean",
          "description": "Automatically archive inactive repositories"
        },
        "inactive_days": {
          "type": "integer",
          "minimum": 1,
          "description": "Days of inactivity before archiving"
        },
        "unarchive_active": {
          "type": "boolean",
          "description": "Automatically unarchive if activity detected"
        },
        "archive_patterns": {
          "type": "array",
          "description": "Repository name patterns to archive",
          "items": {
            "type": "string"
          }
        },
        "keep_active_patterns": {
          "type": "array",
          "description": "Repository name patterns to never archive",
          "items": {
            "type": "string"
          }
        },
        "specific_repos": {
          "type": "array",
          "description": "Specific repositories to archive",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    },
    "archived_repos_partial": {
      "type": "object",
      "properties": {
        "admin_team_only": {
          "type": "boolean"
        },
        "archive_inactive": {
          "type": "boolean"
        },
        "inactive_days": {
          "type": "integer",
          "minimum": 1
        },
        "unarchive_active": {
          "type": "boolean"
        },
        "archive_patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "keep_active_patterns": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "specific_repos": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "additionalProperties": false
    }
  }
}